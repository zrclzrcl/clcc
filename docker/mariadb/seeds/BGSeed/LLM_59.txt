-- High-quality initial seed for MariaDB fuzz testing

-- Create a table with various data types and constraints
CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    age TINYINT UNSIGNED,
    salary DECIMAL(10, 2),
    hire_date DATE,
    is_active BOOLEAN DEFAULT TRUE,
    UNIQUE INDEX (name)
) ENGINE = InnoDB;

-- Create a table with spatial data type for GIS operations
CREATE TABLE t3 (
    id INT PRIMARY KEY,
    point GEOMETRY NOT NULL SRID 4326
) ENGINE = InnoDB;

-- Insert sample data into t1
INSERT INTO t1 VALUES 
(1, 'Alice', 30, 50000.00, '2020-01-15', TRUE),
(2, 'Bob', NULL, 60000.00, '2021-05-20', FALSE),
(3, 'Charlie', 45, 75000.00, '2019-08-30', TRUE);

-- Insert spatial data into t3
INSERT INTO t3 VALUES 
(1, ST_GeomFromText('POINT(1.3 2.5)', 4326)),
(2, ST_GeomFromText('POINT(-3.7 4.2)', 4326));

-- Create a trigger for testing
DELIMITER $$
CREATE TRIGGER trig_t1 AFTER INSERT ON t1 
FOR EACH ROW 
BEGIN
    -- Do something after insert
END$$
DELIMITER ;

-- Create a stored procedure with parameters and flow control
DELIMITER $$
CREATE PROCEDURE sp_test(IN p_id INT, INOUT p_name VARCHAR(50))
BEGIN
    DECLARE v_count INT;
    
    SELECT COUNT(*) INTO v_count FROM t1 WHERE id = p_id;
    
    IF v_count > 0 THEN
        SET p_name = (SELECT name FROM t1 WHERE id = p_id);
    ELSE
        SET p_name = 'Not found';
    END IF;
END$$
DELIMITER ;

-- Enable binary logging to test replication scenarios
SET GLOBAL sql_log_bin = ON;

-- Set session variable for testing different SQL modes
SET @old_sql_mode = @@sql_mode;
SET sql_mode = 'ANSI,NO_ZERO_DATE';

-- Create a table with foreign key constraints
CREATE TABLE t2 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    t1_id INT,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
) ENGINE = InnoDB;

-- Insert data into t2 referencing t1
INSERT INTO t2 VALUES 
(1, 1),
(2, NULL);

-- Reset SQL mode after testing
SET sql_mode = @old_sql_mode;