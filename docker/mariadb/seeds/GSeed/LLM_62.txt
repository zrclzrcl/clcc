SET NAMES utf8mb4;
CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INT CHECK (age >= 0),
    birth_date DATE DEFAULT '2000-01-01',
    balance DECIMAL(10, 2) DEFAULT 0.00,
    is_active BOOLEAN,
    status ENUM('active', 'inactive', 'pending'),
    description TEXT,
    data BLOB,
    location POINT,
    metadata JSON
);
INSERT INTO test_table (name, age, birth_date, balance, is_active, status, description, data, location, metadata) 
VALUES 
    ('Alice', 30, '1993-05-20', 1000.50, TRUE, 'active', 'Test description for Alice.', NULL, ST_GeomFromText('POINT(1 1)'), '{"key": "value"}'),
    ('Bob', 45, '1978-09-30', -200.75, FALSE, 'inactive', '', NULL, ST_GeomFromText('POINT(2 2)'), '{}'),
    ('Charlie', 25, '1998-07-15', 5000.00, TRUE, 'pending', 'Another test description.', NULL, ST_GeomFromText('POINT(3 3)'), '{"test": [1, 2, 3]}');
UPDATE test_table SET balance = balance * 1.1 WHERE id < 4;
DELETE FROM test_table WHERE age > 40;
SELECT * FROM test_table ORDER BY name DESC LIMIT 2;
SELECT name, birth_date FROM test_table WHERE is_active = TRUE AND status = 'active';
SELECT id, ST_AsText(location) AS coordinates FROM test_table;

CREATE PROCEDURE insert_test_data(IN p_name VARCHAR(100))
BEGIN
    IF (SELECT COUNT(*) FROM test_table WHERE name = p_name) = 0 THEN
        INSERT INTO test_table (name, age, status) VALUES (p_name, 30, 'active');
    END IF;
END;

DELIMITER //
CREATE TRIGGER after_test_delete AFTER DELETE ON test_table FOR EACH ROW
BEGIN
    INSERT INTO delete_log (id, name, deleted_at) 
    VALUES (OLD.id, OLD.name, NOW());
END//
DELIMITER ;

CREATE TABLE delete_log (
    id INT AUTO_INCREMENT PRIMARY KEY,
    table_id INT NOT NULL,
    name VARCHAR(100),
    deleted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ANALYZE TABLE test_table;
SHOW INDEX FROM test_table;