DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    age INT CHECK (age >= 0),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_name (name)
);

INSERT INTO t1 (name, age) VALUES
('Alice', 30),
('Bob', 25),
('Charlie', 40),
('David', NULL); -- Testing NULL for age

DROP TABLE IF EXISTS t2;
CREATE TABLE t2 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    t1_id INT,
    value DECIMAL(10, 2) DEFAULT 0.00,
    status ENUM('active', 'inactive') NOT NULL,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
);

INSERT INTO t2 (t1_id, value, status) VALUES
(1, 100.50, 'active'),
(2, 75.25, 'active'),
(3, 200.00, 'inactive');

ALTER TABLE t1 ADD INDEX idx_name_age (name, age);
ALTER TABLE t2 ADD INDEX idx_t1_id_status (t1_id, status);

SELECT 
    t1.name,
    COUNT(t2.id) AS total_records,
    SUM(t2.value) AS total_value
FROM t1
LEFT JOIN t2 ON t1.id = t2.t1_id
WHERE t2.status = 'active'
GROUP BY t1.name;

UPDATE t2 SET status = 'inactive' WHERE value > 150.00;
DELETE FROM t2 WHERE status = 'inactive' AND value < 100.00;

DELIMITER $$
CREATE PROCEDURE sp_test()
BEGIN
    DECLARE total INT DEFAULT 0;
    
    SELECT COUNT(*) INTO total FROM t1;
    IF total > 3 THEN
        INSERT INTO t2 (t1_id, value, status) VALUES (4, 50.75, 'active');
    END IF;
END$$

CREATE TRIGGER trg_after_insert_t1 AFTER INSERT ON t1 FOR EACH ROW
BEGIN
    INSERT INTO t2 (t1_id, value, status) VALUES (NEW.id, 0.00, 'active');
END$$

START TRANSACTION;
INSERT INTO t1 (name, age) VALUES ('Eve', 35);
SAVEPOINT sp1;
UPDATE t2 SET status = 'inactive' WHERE id = 4;
ROLLBACK TO sp1;
COMMIT;

SELECT ROW_COUNT() AS affected_rows;

SET @stmt = 'SELECT name FROM t1 WHERE age > ?';
PREPARE stmt FROM @stmt;
SET @min_age = 30;
EXECUTE stmt USING @min_age;
DEALLOCATE PREPARE stmt;