CREATE DATABASE IF NOT EXISTS test_fuzz;
USE test_fuzz;

CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    amount DECIMAL(10, 2),
    status ENUM('active', 'inactive') DEFAULT 'active'
);

CREATE TABLE t2 (
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    transaction_date DATE,
    description TEXT
);

CREATE INDEX idx_t1_name ON t1(name);
CREATE INDEX idx_t2_user_amount ON t2(user_id, amount);

INSERT INTO t1 (name, created_at, amount, status) VALUES 
('Test User', '2023-01-01 00:00:00', 100.50, 'active'),
('Another Test', '2023-01-02 00:00:00', NULL, 'inactive');

INSERT INTO t2 (user_id, amount, transaction_date, description) VALUES 
(1, 50.75, '2023-01-01', 'Initial deposit'),
(1, -20.50, '2023-01-02', 'Withdrawal');

DELIMITER $$

CREATE FUNCTION calculate_total(user_id INT) RETURNS DECIMAL(10, 2)
DETERMINISTIC
BEGIN
    DECLARE total DECIMAL(10, 2);
    SELECT SUM(amount) INTO total FROM t2 WHERE user_id = user_id;
    RETURN COALESCE(total, 0.00);
END$$

CREATE TRIGGER after_t1_insert AFTER INSERT ON t1 
FOR EACH ROW
BEGIN
    INSERT INTO t2 (user_id, amount, transaction_date, description)
    VALUES (NEW.id, 100.00, CURRENT_DATE(), 'New user registration bonus');
END$$

CREATE PROCEDURE process_transactions()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE current_amount DECIMAL(10, 2);
    DECLARE cur CURSOR FOR SELECT amount FROM t2 WHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);
    
    OPEN cur;
    
    read_loop: LOOP
        FETCH cur INTO current_amount;
        IF done THEN
            LEAVE read_loop;
        END IF;
        
        IF current_amount > 0 THEN
            UPDATE t1 SET amount = amount + current_amount WHERE id IN (SELECT user_id FROM t2 LIMIT 1);
        ELSEIF current_amount < 0 THEN
            UPDATE t1 SET status = 'inactive' WHERE id IN (SELECT user_id FROM t2 LIMIT 1);
        END IF;
    END LOOP;
    
    CLOSE cur;
END$$

DELIMITER ;

CREATE VIEW v_transactions AS 
SELECT 
    t1.name,
    t2.transaction_date,
    t2.amount,
    t2.description
FROM 
    t1
JOIN 
    t2 ON t1.id = t2.user_id;