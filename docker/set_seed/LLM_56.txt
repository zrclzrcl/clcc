CREATE TABLE t0 (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive'),
    score DECIMAL(5,2)
);

INSERT INTO t0 VALUES 
(1, 'Alice', '2023-01-01 00:00:00', 'active', 99.99),
(2, 'Bob', NULL, 'inactive', -50.5),
(3, 'Charlie', '2024-12-31 23:59:59', 'active', 0);

CREATE TABLE t1 (
    id INT PRIMARY KEY,
    t0_id INT,
    value TEXT,
    UNIQUE KEY unique_value (value),
    CONSTRAINT fk_t0 FOREIGN KEY (t0_id) REFERENCES t0(id)
);

INSERT INTO t1 VALUES 
(1, 1, 'sample text'),
(2, NULL, 'another sample'),
(3, 2, 'test');

ALTER TABLE t0 ADD INDEX idx_name (name);
ALTER TABLE t1 ADD CONSTRAINT chk_value CHECK (value != '');

DELIMITER $$
CREATE PROCEDURE sp_insert_t0(
    IN p_id INT,
    IN p_name VARCHAR(100),
    IN p_score DECIMAL(5,2)
)
BEGIN
    INSERT INTO t0 (id, name, score) VALUES (p_id, p_name, p_score);
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_after_insert_t0
AFTER INSERT ON t0
FOR EACH ROW
BEGIN
    INSERT INTO t1 (t0_id, value) VALUES (NEW.id, CONCAT('New entry: ', NEW.name));
END$$
DELIMITER ;

CREATE VIEW v0 AS 
SELECT 
    t0.id,
    t0.name,
    t1.value
FROM 
    t0
LEFT JOIN 
    t1 ON t0.id = t1.t0_id;

ALTER TABLE t0 ADD COLUMN new_col BOOLEAN DEFAULT FALSE;
ALTER TABLE t1 DROP INDEX unique_value;

SELECT 
    id, 
    name, 
    created_at, 
    status,
    JSON_OBJECT('id', id, 'name', name) AS json_data
FROM 
    t0
WHERE 
    score > (SELECT AVG(score) FROM t0);

EXPLAIN SELECT * FROM t0 WHERE name LIKE '%test%';
ANALYZE TABLE t0;

SET @json = '{"key": "value"}';
SELECT JSON_EXTRACT(@json, '$.key') AS extracted_value;