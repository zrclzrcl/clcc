SET optimizer_switch='semijoin=off';
CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    value DECIMAL(10, 2),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') NOT NULL,
    UNIQUE INDEX idx_name (name),
    INDEX idx_status_value (status, value)
);
INSERT INTO t1 (name, value, status) VALUES
('Item 1', 100.50, 'active'),
('Item 2', NULL, 'inactive'),
('Item 3', 99.99, 'active');
ANALYZE TABLE t1;
CHECK TABLE t1;
REPAIR TABLE t1;
UPDATE t1 SET value = (SELECT AVG(value) FROM t1 WHERE status = 'active') WHERE id IN (SELECT id FROM t1 ORDER BY RAND() LIMIT 2);
DELIMITER $$
CREATE PROCEDURE update_values()
BEGIN
    DECLARE avg_val DECIMAL(10, 2);
    SELECT AVG(value) INTO avg_val FROM t1 WHERE status = 'active';
    IF avg_val IS NOT NULL THEN
        UPDATE t1 SET value = avg_val WHERE status = 'active';
    END IF;
END$$
DELIMITER ;
CREATE TRIGGER after_insert_t1 AFTER INSERT ON t1 FOR EACH ROW
BEGIN
    INSERT INTO t2 (id, name) VALUES (NEW.id, NEW.name);
END;
GET_LOCK('test_lock', 0);
INSERT INTO t1 (name, value, status) VALUES ('Item 4', 50.00, 'active');
RELEASE_LOCK('test_lock');
ANALYZE TABLE t1;