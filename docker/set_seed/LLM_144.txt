-- Create tables with various constraints and data types
CREATE TABLE t1(
    c0 INTEGER PRIMARY KEY AUTOINCREMENT,
    c1 TEXT NOT NULL DEFAULT '',
    c2 INTEGER UNIQUE CHECK(c2 >= 0),
    c3 REAL,
    c4 BLOB,
    c5 BOOLEAN CHECK(c5 IN (0, 1)),
    UNIQUE(c1, c2)
);

-- Create a WITHOUT ROWID table with foreign key constraints
CREATE TABLE t2(
    c0 INTEGER PRIMARY KEY,
    c1 TEXT,
    c2 REFERENCES t1(c0),
    c3 DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY(c2) REFERENCES t1(c0)
) WITHOUT ROWID;

-- Create a virtual FTS5 table for full-text search
CREATE VIRTUAL TABLE vt1 USING fts5(
    content=NONE,
    tokenize=porter,
    prefix='2'
);

-- Create indexes including unique and expression-based indexes
CREATE INDEX idx_t1 ON t1(c0, c1, c2 DESC, c3 * 10);
CREATE UNIQUE INDEX idx_vt1 ON vt1(rowid, c0, c1 COLLATE NOCASE);

-- Create triggers for testing data dependencies
CREATE TRIGGER trig_after_insert AFTER INSERT ON t2
BEGIN
    UPDATE t1 SET c5 = 1 WHERE c0 = NEW.c0;
END;

-- Create a view with CTE and complex query
CREATE VIEW vw_test AS
WITH cte AS (
    SELECT c0, c1 FROM t1 UNION ALL SELECT rowid, content FROM vt1
)
SELECT *, ROW_NUMBER() OVER (ORDER BY c0) AS rn FROM cte;

-- Insert sample data including edge cases
INSERT INTO t1 VALUES 
(1, 'test', 123, 45.67, X'ABCD', 1),
(2, '', NULL, -98.76, NULL, 0);

INSERT INTO t2 VALUES 
(1, 'trigger test', 1, '2023-01-01'),
(2, NULL, NULL, CURRENT_DATE);

-- Populate virtual table with sample data
INSERT INTO vt1(rowid, c0) VALUES (1, 'test fts5');

-- Set PRAGMA values for testing different behaviors
PRAGMA foreign_keys = ON;
PRAGMA synchronous = NORMAL;

-- Analyze the database for query optimization testing
ANALYZE;