CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    data BLOB,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive'),
    json_data JSON,
    UNIQUE INDEX unique_name (name),
    INDEX idx_timestamp (timestamp)
);

INSERT INTO test_table (name, data, status, json_data) 
VALUES 
('test1', BINARY '0xdeadbeef', 'active', '{"key": "value"}'),
('test2', NULL, 'inactive', NULL);

SET @var = 42;
SELECT SLEEP(1), BENCHMARK(1000, MD5('test'));

CREATE TRIGGER trg_before_insert 
BEFORE INSERT ON test_table
FOR EACH ROW
SET NEW.timestamp = CURRENT_TIMESTAMP;

DELIMITER $$
CREATE PROCEDURE proc_test()
BEGIN
    DECLARE var INT DEFAULT 10;
    WHILE var > 0 DO
        INSERT INTO test_table (name, status) VALUES (CONCAT('proc_', var), 'active');
        SET var = var - 1;
    END WHILE;
END$$
DELIMITER ;

CALL proc_test();

CREATE VIEW view_test AS 
SELECT name, status, json_data->>'$.key' AS extracted_value 
FROM test_table 
WHERE status = 'active';

SET @@global.max_connections = 500;
SET @@session.sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO';

ANALYZE TABLE test_table;

SELECT COUNT(*) AS total_rows FROM test_table;
EXPLAIN SELECT * FROM test_table WHERE name LIKE '%test%' AND status = 'active';
SHOW INDEXES FROM test_table;