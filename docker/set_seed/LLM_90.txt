CREATE TABLE users (
    user_id INTEGER PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    email TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_login DATETIME
);

CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id),
    amount DECIMAL(10, 2) CHECK (amount > 0),
    order_date DATE NOT NULL
);

INSERT INTO users VALUES (1, 'alice', 'alice@example.com', '2023-01-01 12:00:00', NULL);
INSERT INTO users VALUES (2, 'bob', 'bob@example.com', '2023-01-02 14:30:00', '2023-01-05 09:15:00');
INSERT INTO users VALUES (3, 'charlie', NULL, '2023-01-03 08:45:00', '2023-01-03 08:45:00');

INSERT INTO orders VALUES (101, 1, 19.99, '2023-01-01');
INSERT INTO orders VALUES (102, 1, 29.99, '2023-01-02');
INSERT INTO orders VALUES (103, 2, 49.99, '2023-01-05');

SELECT u.username, o.order_id, o.amount 
FROM users AS u 
JOIN orders AS o ON u.user_id = o.user_id 
WHERE o.order_date >= date('now', '-7 days');

SELECT u.username, COUNT(o.order_id) AS total_orders, SUM(o.amount) AS total_spent 
FROM users AS u 
LEFT JOIN orders AS o ON u.user_id = o.user_id 
GROUP BY u.username 
HAVING total_orders > 0 
ORDER BY total_spent DESC;

SELECT DISTINCT substr(u.email, 1, 3) AS email_prefix 
FROM users AS u 
WHERE u.email IS NOT NULL AND u.last_login IS NOT NULL;

SELECT date(u.created_at, '+1 month') AS subscription_expiration 
FROM users AS u 
WHERE u.username = 'alice';

VACUUM;