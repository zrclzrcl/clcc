CREATE TABLE t1(
    a INTEGER PRIMARY KEY AUTOINCREMENT,
    b TEXT UNIQUE ON CONFLICT REPLACE,
    c REAL,
    d TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    e BOOLEAN CHECK(e IN (0, 1)),
    f REFERENCES t1(a) MATCH SIMPLE
);

INSERT INTO t1(b, c, e) VALUES('test', 123.45, 1), ('another', NULL, 0);
SELECT a, b, c, d, e FROM t1;
INSERT INTO t1(b, c, e) VALUES('duplicate', 678.90, 1);
SELECT * FROM t1 ORDER BY a DESC LIMIT 2 OFFSET 1;
CREATE INDEX idx_b ON t1(b);
ANALYZE;
VACUUM;

CREATE TABLE t2(
    x INTEGER PRIMARY KEY ON CONFLICT FAIL,
    y TEXT UNIQUE ON CONFLICT IGNORE
) WITHOUT ROWID;
INSERT INTO t2(x, y) VALUES(1, 'sqlite'), (2, 'test');
SELECT * FROM t2 ORDER BY x;
INSERT INTO t2(x, y) VALUES(3, 'duplicate') ON CONFLICT IGNORE;

CREATE TRIGGER trig AFTER INSERT ON t1 BEGIN
    INSERT INTO t2(x, y) SELECT a, b FROM t1 WHERE c > 100.0;
END;
SELECT name FROM sqlite_master WHERE type = 'trigger';

PRAGMA foreign_keys = ON;
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.x;

BEGIN TRANSACTION;
INSERT INTO t1(b, c, e) VALUES('transaction', 999.99, 1);
SAVEPOINT sp1;
UPDATE t1 SET c = 888.88 WHERE b = 'transaction';
ROLLBACK TO sp1;
COMMIT;

SELECT a, b, c,
       RANK() OVER (ORDER BY c DESC) AS rank
FROM t1 ORDER BY rank LIMIT 3;