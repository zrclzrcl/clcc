SET optimizer_switch='batched_key_access=on,mrr_cost_based=off';
CREATE TABLE t1 (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    data BLOB,
    value DECIMAL(10, 2),
    created_at DATE,
    updated_at DATETIME,
    metadata JSON
);
INSERT INTO t1 VALUES 
    (1, 'Test Item', 'A test item for database testing.', NULL, 100.50, '2023-01-01', NOW(), '{"status": "active", "tags": ["test", "database"]}'),
    (2, 'Edge Case', '', NULL, -99999.99, '1970-01-01', '2023-01-01 00:00:01', '{"status": "inactive"}');
CREATE TABLE t2 (
    id INT PRIMARY KEY,
    t1_id INT,
    value INT,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
);
INSERT INTO t2 VALUES 
    (1, 1, 42),
    (2, 2, NULL);
SELECT t1.id, t1.name, t2.value 
FROM t1 
LEFT JOIN t2 ON t1.id = t2.t1_id 
WHERE t2.value > 0 OR t2.value IS NULL;
SELECT COUNT(*) AS total, SUM(value) AS sum_value 
FROM t2 
GROUP BY t1_id 
HAVING SUM(value) > 10;
SELECT id, name, ROW_NUMBER() OVER (ORDER BY name DESC) as row_num 
FROM t1;
DELIMITER $$
CREATE PROCEDURE get_active_items()
BEGIN
    SELECT * FROM t1 WHERE JSON_EXTRACT(metadata, '$.status') = '"active"';
END$$
DELIMITER ;
CREATE TRIGGER after_insert_t1 AFTER INSERT ON t1 FOR EACH ROW
BEGIN
    UPDATE t2 SET value = 0 WHERE t1_id = NEW.id;
END;