SET optimizer_switch='semijoin=on,materialization=on,firstmatch=on,loosescan=on,mrr=on,mrr_cost_based=off';

CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') DEFAULT 'active',
    value DECIMAL(10, 2) DEFAULT 0.00
);

CREATE TABLE t2 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    t1_id INT NOT NULL,
    data TEXT,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
) ENGINE=InnoDB;

INSERT INTO t1 (name, value) VALUES
('Item 1', 100.50),
('Item 2', 200.75),
('Item 3', NULL);

ANALYZE TABLE t1;
CHECK TABLE t1;
REPAIR TABLE t1;

UPDATE t1 SET status = 'inactive' WHERE id = 2;

CREATE INDEX idx_value ON t1(value);
ALTER TABLE t1 ADD COLUMN description VARCHAR(200);

INSERT INTO t2 (t1_id, data) VALUES
(1, 'Sample data for Item 1'),
(3, 'More sample data');

SELECT t1.name, t1.value, t2.data 
FROM t1 
LEFT JOIN t2 ON t1.id = t2.t1_id 
ORDER BY t1.id DESC;

EXPLAIN SELECT * FROM t1 WHERE status = 'active' LIMIT 5;

START TRANSACTION;
INSERT INTO t1 (name, value) VALUES ('Item 4', 300.00);
SAVEPOINT my_savepoint;
ROLLBACK TO my_savepoint;
COMMIT;

GRANT SELECT ON t1 TO 'test_user'@'localhost';
REVOKE SELECT ON t1 FROM 'test_user'@'localhost';

SELECT JSON_OBJECT('id', id, 'name', name) AS json_data FROM t1 LIMIT 3;

CREATE TEMPORARY TABLE temp_t (
    temp_id INT,
    temp_value DECIMAL(10,2)
);

INSERT INTO temp_t SELECT id, value FROM t1 WHERE status = 'active';

SELECT * FROM temp_t;
DROP TEMPORARY TABLE temp_t;

DELETE FROM t1 WHERE status = 'inactive';