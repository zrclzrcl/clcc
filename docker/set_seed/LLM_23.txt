SET optimizer_switch='index_merge=on,block_size=8192';
SET @old_query_cache_type = @@query_cache_type;
SET query_cache_type = 0;

CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') NOT NULL,
    price DECIMAL(10, 2),
    FULLTEXT INDEX idx_name_description (name, description)
) ENGINE = InnoDB;

INSERT INTO test_table (name, description, status, price)
VALUES ('Item 1', 'This is a sample item.', 'active', 99.99),
       ('Item 2', 'Another sample item.', 'inactive', 199.99);

UPDATE test_table SET description = CONCAT(description, ' Updated.') WHERE id < 3 LIMIT 2;

DELETE FROM test_table WHERE status = 'inactive' AND price > (SELECT AVG(price) FROM test_table);

CREATE PROCEDURE insert_sample_data(IN name_param VARCHAR(50), IN status_param ENUM('active', 'inactive'))
BEGIN
    INSERT INTO test_table (name, description, status)
    VALUES (name_param, 'Inserted via stored procedure.', status_param);
END;

DELIMITER $$

CREATE TRIGGER after_update_trigger AFTER UPDATE ON test_table FOR EACH ROW
BEGIN
    INSERT INTO update_log (id, name, timestamp) VALUES (OLD.id, OLD.name, NOW());
END$$

DELIMITER ;

SELECT t1.name, t2.description FROM test_table AS t1 JOIN another_table AS t2 ON t1.id = t2.id UNION SELECT 'No match' AS name, NULL AS description;

ANALYZE TABLE test_table;
CHECKSUM TABLE test_table;

EXPLAIN SELECT * FROM test_table WHERE MATCH(name, description) AGAINST ('sample') LIMIT 5;