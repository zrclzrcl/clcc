-- Initial seed for SQLite database fuzz testing
CREATE TABLE t1(
    id INTEGER PRIMARY KEY,
    name TEXT,
    value REAL,
    data BLOB,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(name),
    CHECK(value >= 0)
);

INSERT INTO t1(id, name, value, data) VALUES(1, 'test', 123.45, zeroblob(10));
INSERT INTO t1(id, name, value, data) VALUES(2, NULL, -0.0, hex('deadbeef'));
INSERT INTO t1(id, name, value, data) VALUES(3, 'boundary', 9223372036854775807, zeroblob(0));

CREATE TABLE t2(
    id INTEGER PRIMARY KEY,
    t1_id INTEGER REFERENCES t1(id),
    type TEXT CHECK(type IN ('A','B','C'))
);

INSERT INTO t2(t1_id, type) VALUES(1, 'A'), (2, 'B'), (3, 'C');

UPDATE t1 SET value = 0.0 WHERE id = 2;

DELETE FROM t2 WHERE id = 4;

SELECT quote(name), hex(data), COUNT(*) 
FROM t1 
JOIN t2 ON t1.id = t2.t1_id 
WHERE timestamp > datetime('now', '-1 day')
GROUP BY name 
HAVING COUNT(*) >= 1 
ORDER BY value DESC LIMIT 5 OFFSET 2;

WITH RECURSIVE cte(n) AS (
    SELECT 1
    UNION ALL
    SELECT n + 1 FROM cte WHERE n < 5
)
SELECT * FROM cte;

CREATE INDEX t1_value_idx ON t1(ABS(value));

CREATE TRIGGER t1_insert_trigger AFTER INSERT ON t1 BEGIN
    INSERT INTO trigger_log VALUES('Insert on t1', NEW.id, datetime(CURRENT_TIMESTAMP));
END;

CREATE TRIGGER t2_delete_trigger BEFORE DELETE ON t2 BEGIN
    SELECT RAISE(IGNORE) WHERE (SELECT COUNT(*) FROM t1 WHERE id = OLD.t1_id) > 0;
END;

CREATE VIEW v1 AS 
SELECT name, value, type 
FROM t1 
JOIN t2 ON t1.id = t2.t1_id 
WHERE timestamp >= datetime('now', '-7 day');

BEGIN TRANSACTION;
    INSERT INTO t1(name, value) VALUES('tx_test', 5);
    SAVEPOINT sp1;
        INSERT INTO t2(t1_id, type) VALUES(LAST_INSERT_ROWID(), 'D');
        ROLLBACK TO sp1;
COMMIT;

SELECT * FROM v1 
UNION ALL 
SELECT name, value, NULL FROM t1 WHERE id NOT IN (SELECT t1_id FROM t2);