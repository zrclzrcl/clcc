-- Create a table with a primary key and explicit ROWID handling
CREATE TABLE t1(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    value REAL,
    data BLOB,
    rowid INTEGER -- Explicitly including ROWID for testing
);

-- Table without a primary key to test edge cases
CREATE TABLE t2(
    col1 TEXT,
    col2 INT
);

-- Create a table using FTS5 for full-text search functionality
CREATE VIRTUAL TABLE t3 USING fts5(content, tokenize = 'porter');

-- Insert sample data into the tables
INSERT INTO t1 VALUES(1, 'Alice', 100.5, X'12345678', 1);
INSERT INTO t1 VALUES(2, 'Bob', 200.75, X'abcdef', 2);
INSERT INTO t1 VALUES(3, 'Charlie', NULL, X'fedcba', 3);

-- Insert into table without primary key
INSERT INTO t2 VALUES('test1', 42);
INSERT INTO t2 VALUES('test2', NULL);

-- Insert into FTS5 table
INSERT INTO t3(content) VALUES('This is a test document.');
INSERT INTO t3(content) VALUES('Another example for testing purposes.');

-- Create triggers to test event-driven functionality
CREATE TRIGGER trig_before_insert BEFORE INSERT ON t1
BEGIN
    -- Simple trigger action
    SELECT 'Before insert triggered' AS message;
END;

CREATE TRIGGER trig_after_update AFTER UPDATE ON t1
BEGIN
    -- Another trigger action
    SELECT 'After update triggered' AS message;
END;

-- Alter table to test schema changes after data insertion
ALTER TABLE t1 DROP COLUMN value;

-- Use a Common Table Expression (CTE) for complex queries
WITH cte AS (
    SELECT name, data FROM t1 WHERE id > 1
)
SELECT * FROM cte;

-- Test window functions and ordering
SELECT 
    name,
    ROW_NUMBER() OVER(ORDER BY name) as row_num,
    RANK() OVER(ORDER BY value DESC) as rank_value
FROM t1;

-- Test full-text search queries
SELECT content FROM t3 WHERE t3 MATCH 'test';

-- Select from table without primary key
SELECT col1, col2 FROM t2;