CREATE TABLE test_main (
    id INTEGER PRIMARY KEY,
    name TEXT,
    value REAL,
    data BLOB,
    status BOOLEAN,
    UNIQUE (name)
);

CREATE TABLE test_ref (
    ref_id INTEGER PRIMARY KEY,
    category TEXT,
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_main VALUES (1, 'test_name', 123.45, X'010203', 1);
INSERT INTO test_main VALUES (2, NULL, -987.65, NULL, 0);
INSERT INTO test_main VALUES (3, 'edge_case', 0.0, X'FFFFFFFF', 1);

CREATE INDEX idx_test_main_name ON test_main(name);
CREATE INDEX idx_test_ref_category ON test_ref(category);

INSERT INTO test_ref VALUES (1, 'category_a', 'description_1', NULL);
INSERT INTO test_ref VALUES (2, 'category_b', NULL, '2023-01-01 12:00:00');
INSERT INTO test_ref VALUES (3, 'category_c', 'description_3', '2023-01-02 00:00:00');

SELECT tm.name, tr.category, tm.value + tr.ref_id AS total_value
FROM test_main tm
JOIN test_ref tr ON tm.id = tr.ref_id
WHERE tm.status = 1 AND (tm.value > 100 OR tr.description IS NOT NULL)
ORDER BY tm.name DESC LIMIT 5 OFFSET 2;

SELECT COUNT(*) AS row_count, MAX(value) AS max_value, MIN(value) AS min_value
FROM test_main
WHERE name LIKE '%test%';

WITH cte AS (
    SELECT id, name, value FROM test_main WHERE status = 1
)
SELECT *, ROW_NUMBER() OVER (ORDER BY value DESC) AS rank FROM cte;

CREATE VIRTUAL TABLE ft_test USING FTS5(name, content=test_main);
INSERT INTO ft_test VALUES('test_string');
SELECT * FROM ft_test WHERE name MATCH 'test*';