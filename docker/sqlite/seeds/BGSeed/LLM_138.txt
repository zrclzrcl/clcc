PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS t1 (
    id INTEGER PRIMARY KEY,
    name TEXT UNIQUE NOT NULL,
    data BLOB,
    value REAL DEFAULT 0.0,
    status INTEGER CHECK(status IN (0, 1)),
    ts DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS t2 (
    tid INTEGER REFERENCES t1(id) ON DELETE CASCADE,
    info TEXT,
    PRIMARY KEY(tid AUTOINCREMENT)
);

INSERT INTO t1(name, data, value, status) VALUES 
('test1', X'010203', 123.456, 1),
('test2', NULL, -987.654, 0),
('', X'ABCDEF', 0.0, 1);

INSERT INTO t2(info) VALUES 
('Record 1'),
('Record 2');

SELECT t1.id, t1.name, t1.value, t2.info
FROM t1
JOIN t2 ON t1.id = t2.tid
WHERE t1.status = 1;

WITH cte AS (
    SELECT id, name, ROW_NUMBER() OVER (ORDER BY value DESC) as rn
    FROM t1
)
SELECT * FROM cte WHERE rn <= 3;

UPDATE t1 SET status = 0 WHERE name LIKE 'test%';

DELETE FROM t2 WHERE info NOT IN ('Record 1', 'Record 2');

CREATE VIEW v1 AS 
SELECT t1.name, t2.info 
FROM t1 LEFT JOIN t2 ON t1.id = t2.tid;

CREATE TRIGGER trg_update AFTER UPDATE OF status ON t1
BEGIN
    INSERT INTO t2(tid, info) VALUES (new.id, 'Status updated');
END;