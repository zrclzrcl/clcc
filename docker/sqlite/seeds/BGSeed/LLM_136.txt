CREATE TABLE log_table (action TEXT, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE t0(c0 INT, c1 AS (c0 * 2));
INSERT INTO t0 VALUES(5);

CREATE TABLE t1 WITHOUT ROWID(id INTEGER PRIMARY KEY, name TEXT, age INT);
INSERT INTO t1 VALUES(1, 'Alice', 30), (2, 'Bob', 25), (3, 'Charlie', 35);

CREATE VIRTUAL TABLE vt USING FTS5(content);
INSERT INTO vt VALUES('Sample text for full-text search');

CREATE TRIGGER t1_after_insert AFTER INSERT ON t1
BEGIN
    INSERT INTO log_table VALUES('Inserted record', datetime('now'));
END;

CREATE TRIGGER t1_after_update AFTER UPDATE ON t1
BEGIN
    INSERT INTO log_table VALUES('Updated record', datetime('now'));
END;

SELECT c0, c1 FROM t0;
SELECT t0.c0, t1.id FROM t0 JOIN t1 ON t0.c1 = t1.id;
SELECT t1.name IS NULL FROM t0 LEFT JOIN t1 ON t0.c1 = t1.id;

SELECT MIN(age), MAX(age), COUNT(*) FROM t1 GROUP BY age;
SELECT RANK() OVER (ORDER BY age DESC) AS rank FROM t1;

WITH cte AS (
    SELECT 0 AS n
    UNION ALL
    SELECT n + 1 FROM cte WHERE n < 4
)
SELECT * FROM cte;

CREATE INDEX idx_t0_c1 ON t0(c1);
CREATE INDEX idx_t1_id_name ON t1(id, name);
CREATE INDEX idx_t1_age ON t1(age);