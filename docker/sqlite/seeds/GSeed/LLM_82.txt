CREATE TABLE t0 (
    id INTEGER PRIMARY KEY,
    name TEXT,
    value REAL,
    data BLOB
);

INSERT INTO t0 VALUES 
(1, 'Alice', 10.5, X'616C696365'),
(2, 'Bob', NULL, X'626F62'),
(3, 'Charlie', 20.7, NULL),
(4, NULL, 15.3, X'6E756C6C'),
(5, 'David', NULL, X'6461766964');

CREATE TABLE t1 (
    a INTEGER,
    b TEXT,
    f0 INTEGER REFERENCES t0(id)
);

INSERT INTO t1 VALUES 
(10, 'test1', 1),
(20, 'test2', 3),
(30, NULL, 5),
(40, 'test4', 999); -- Invalid foreign key to test edge case

CREATE TABLE t2 (
    x INTEGER,
    y TEXT
) WITHOUT ROWID;

INSERT INTO t2 VALUES 
(100, 'alpha'),
(200, 'beta'),
(300, 'gamma');

SELECT * FROM t0 LEFT JOIN t1 ON id = f0 WHERE name IS NOT NULL;
SELECT a, (SELECT MAX(value) FROM t0 WHERE id = f0) AS b FROM t1 WHERE a > 5;
SELECT ROW_NUMBER() OVER (ORDER BY value DESC), name, value FROM t0 GROUP BY name HAVING SUM(value) > 2;
SELECT DISTINCT a FROM t1 UNION ALL SELECT x FROM t2;
SELECT id, LOWER(name), value * 2 FROM t0 ORDER BY id DESC LIMIT 3 OFFSET 1;