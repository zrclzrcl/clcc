BEGIN;
CREATE TABLE t1 (
    id INTEGER PRIMARY KEY,
    name TEXT,
    data BLOB,
    value REAL,
    status NUMERIC,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    rowid INTEGER UNIQUE
);
CREATE UNIQUE INDEX idx_t1_id ON t1(id);
CREATE INDEX idx_t1_name_status ON t1(name, status) WHERE status > 0;
CREATE TABLE t2 (
    tid REFERENCES t1(id),
    category TEXT CHECK (category IN ('A', 'B', 'C')),
    price REAL,
    quantity INTEGER DEFAULT 0
);
INSERT INTO t1 VALUES 
    (1, 'Test1', x'5468697320697320612074657374', 100.5, 1, CURRENT_TIMESTAMP, 1),
    (2, 'Test2', NULL, -123.45, 0, '2023-01-01 00:00:00', 2),
    (3, 'Test3', x'6162636465', 999999999999.999, NULL, '2023-01-02 12:34:56', 3);
INSERT INTO t2 VALUES 
    (1, 'A', 100.0, NULL),
    (1, 'B', 200.5, 10),
    (2, 'C', NULL, -5);
COMMIT;

SELECT DISTINCT name, status FROM t1 ORDER BY name DESC;
SELECT COUNT(*) AS total_rows, SUM(value) AS total_value FROM t1 WHERE status != 0 GROUP BY status HAVING COUNT(*) > 1;
SELECT id, RANK() OVER (ORDER BY value DESC) AS rank FROM t1;
WITH cte AS (
    SELECT tid, AVG(price) as avg_price FROM t2 GROUP BY tid
)
SELECT t1.id, t1.name, cte.avg_price FROM t1 LEFT JOIN cte ON t1.id = cte.tid ORDER BY t1.id LIMIT 3 OFFSET 1;
SELECT * FROM t1 WHERE created_at >= datetime('now', '-7 days') AND status IN (0, 1);
SELECT t1.*, t2.* FROM t1 JOIN t2 ON t1.id = t2[tid] WHERE t2.price > 50.0 ORDER BY t2.category ASC;
SELECT * FROM t1 WHERE data LIKE x'61%' OR name GLOB 'Test*';
SELECT (value * 100) AS scaled_value FROM t1 WHERE status IS NULL;
SELECT EXISTS(SELECT 1 FROM t2 WHERE tid = 3);