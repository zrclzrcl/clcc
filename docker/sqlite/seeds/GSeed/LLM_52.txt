CREATE TABLE t1 (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    data BLOB,
    value REAL CHECK(value >= 0),
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO t1 (id, name, data) VALUES 
(1, 'Test1', X'48656C6C6F'),
(2, 'Test2', X'576F726C64'),
(3, NULL, X''), -- Testing edge case with NULL name
(4, 'Test4', NULL); -- Testing edge case with NULL BLOB

CREATE TABLE t2 (
    id INTEGER PRIMARY KEY,
    a INT,
    b TEXT,
    c BLOB,
    UNIQUE (a) ON CONFLICT REPLACE
);

INSERT INTO t2 (id, a, b, c) VALUES 
(1, 100, 'Hello', X'68656C6C6F'),
(2, 200, 'World', X'776F726C64'),
(3, NULL, '', X''), -- Testing edge case with NULL a
(4, 100, 'Duplicate', X''); -- Testing ON CONFLICT REPLACE

CREATE INDEX t2_b_index ON t2(b);

ANALYZE;

SELECT 
    t1.id,
    t1.name,
    t2.b,
    COUNT(*) AS total
FROM 
    t1
JOIN 
    t2 ON t1.id = t2.id
WHERE 
    t1.value > 0 AND (t2.a IS NULL OR t2.a >= 100)
GROUP BY 
    t1.id, t1.name, t2.b
HAVING 
    COUNT(*) > 0;

UPDATE t1 SET name = 'UpdatedName' WHERE id = 1;

SELECT 
    REPLACE(t1.name, 'Test', 'New') AS modified_name,
    LENGTH(t1.data) AS data_length,
    t2.c AS blob_data
FROM 
    t1
LEFT JOIN 
    t2 ON t1.id = t2.id
ORDER BY 
    t1.timestamp DESC;

CREATE TRIGGER update_trigger AFTER UPDATE ON t1 BEGIN
    INSERT INTO t2 (id, a, b) VALUES (new.id, 300, 'Triggered');
END;

SELECT * FROM t1 WHERE data IS NOT NULL AND LENGTH(data) > 5;