DROP TABLE IF EXISTS test_table;
CREATE TABLE test_table (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    value REAL CHECK (value >= 0),
    status BOOLEAN DEFAULT FALSE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_table (id, name, value) 
SELECT row_number() OVER (), 'test' || row_number() OVER (), randomblob(10)
FROM (
    SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
);

CREATE INDEX idx_status ON test_table(status);
CREATE UNIQUE INDEX idx_unique_name ON test_table(name);

WITH recursive_numbers AS (
    SELECT 1 AS n
    UNION ALL
    SELECT n + 1 FROM recursive_numbers WHERE n < 10
)
INSERT INTO test_table (id, name, value)
SELECT n, 'recursive' || n, random()
FROM recursive_numbers;

SELECT t1.id, t2.name, t1.value 
FROM test_table AS t1
INNER JOIN (
    SELECT id, name FROM test_table WHERE status = TRUE
) AS t2 ON t1.id = t2.id;

SELECT MIN(value), MAX(value)
FROM test_table
GROUP BY status
HAVING COUNT(*) > 2;

SELECT id, name, value,
       ROW_NUMBER() OVER (ORDER BY value DESC) as rank_desc
FROM test_table
WHERE status = FALSE;