CREATE TABLE t1(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    value BLOB,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(name),
    CHECK(value IS NOT NULL OR name = 'test')
);
CREATE INDEX idx_t1_name ON t1(name);
CREATE TABLE t2(
    id INTEGER PRIMARY KEY,
    t1_id INTEGER,
    data TEXT,
    FOREIGN KEY(t1_id) REFERENCES t1(id)
);
PRAGMA journal_mode = MEMORY;
PRAGMA synchronous = OFF;
INSERT INTO t1 VALUES(1, 'test', NULL, CURRENT_TIMESTAMP);
ALTER TABLE t1 ADD COLUMN status TEXT DEFAULT 'active';
CREATE TABLE t3(
    a INTEGER,
    b TEXT,
    c BLOB,
    d REAL,
    e BOOLEAN,
    f TIMESTAMP,
    g VARCHAR(255),
    h CLOB,
    i BINARY,
    j NUMERIC,
    k UUID,
    l JSON,
    m XML,
    PRIMARY KEY(a, b),
    FOREIGN KEY(c) REFERENCES t1(value)
);
CREATE TABLE t4(
    x INTEGER PRIMARY KEY,
    y TEXT UNIQUE
);
INSERT INTO t3 VALUES(1, 'test', NULL, 123.45, TRUE, CURRENT_TIMESTAMP, 'example', 'long text', X'010203', 987654, 'e8cdaa3b-17d5-4a7f-bdc0-c00c4cc21e1f', '{"key": "value"}', '<root><child>test</child></root>');
CREATE TRIGGER trig_t1_insert AFTER INSERT ON t1 BEGIN
    INSERT INTO t2(t1_id, data) VALUES(new.id, 'inserted');
END;
CREATE TRIGGER trig_t1_update AFTER UPDATE ON t1 BEGIN
    UPDATE t2 SET data = 'updated' WHERE t1_id = old.id;
END;
CREATE TRIGGER trig_t1_delete BEFORE DELETE ON t1 BEGIN
    DELETE FROM t2 WHERE t1_id = old.id;
END;
CREATE VIEW v1 AS SELECT t1.name, t2.data FROM t1 JOIN t2 ON t1.id = t2.t1_id;
WITH cte AS (
    SELECT 1 AS n UNION ALL SELECT n+1 FROM cte WHERE n < 5
)
SELECT * FROM cte;