CREATE TABLE t1 (id INT PRIMARY KEY, name VARCHAR(50), created_at DATETIME);
CREATE TABLE t2 (id INT, value DECIMAL(10, 2), is_active BOOLEAN);
CREATE TABLE t3 (id INT, content TEXT);

INSERT INTO t1 VALUES (1, 'Alice', NOW()), (2, NULL, '2024-01-01 00:00:00'), (3, 'Bob', NULL);
INSERT INTO t2 VALUES (1, 100.5, TRUE), (2, -50.75, FALSE), (3, NULL, NULL);
INSERT INTO t3 VALUES (1, 'Hello''World'), (2, 'Long text with special characters: !@#$%^&*()_+{}|:"<>?~`'), (3, '');

UPDATE t1 SET name = UPPER(name) WHERE id > 1;
UPDATE t2 SET value = value * -1 WHERE is_active = FALSE;

SELECT 
    t1.id,
    CONCAT(t1.name, '(', t2.value, ')') AS combined,
    SUM(CASE WHEN t2.is_active THEN t2.value ELSE 0 END) AS total_active,
    COUNT(DISTINCT t3.content) AS unique_content
FROM t1
JOIN t2 ON t1.id = t2.id
LEFT JOIN t3 ON t1.id = t3.id
WHERE t1.created_at > DATE_SUB(NOW(), INTERVAL 1 YEAR)
GROUP BY t1.id, t1.name, t2.value
HAVING total_active > 0
LIMIT 5;

SELECT 
    t1.id,
    (SELECT name FROM t1 WHERE id = t1.id) AS name_alias,
    (SELECT COUNT(*) FROM t3 WHERE content LIKE '%test%') AS test_count
FROM t1
UNION
SELECT 
    t2.id,
    CAST(t2.value AS CHAR),
    t2.is_active
FROM t2;

INSERT IGNORE INTO t1 VALUES (4, 'Charlie', NOW()), (5, 'Charlie', NOW());

DELIMITER $$
CREATE FUNCTION fn_upper(s VARCHAR(255)) RETURNS VARCHAR(255)
DETERMINISTIC
BEGIN
    RETURN UPPER(s);
END$$

DELIMITER ;
SET GLOBAL log_bin = 1;

CREATE TRIGGER trg_after_update AFTER UPDATE ON t1 FOR EACH ROW 
BEGIN
    INSERT INTO t3 VALUES (NEW.id, CONCAT('Updated at ', NOW()));
END;