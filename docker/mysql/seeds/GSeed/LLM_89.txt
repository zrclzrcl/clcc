SET optimizer_switch='index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on';

CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    amount DECIMAL(10, 2) NOT NULL CHECK (amount > 0),
    status ENUM('active', 'inactive') DEFAULT 'active' NOT NULL
);

INSERT INTO t1 (name, amount) VALUES 
('Item 1', 100.50),
('Item 2', 200.75),
('Item 3', 300.99);

SELECT t1.name, t2.description FROM t1
JOIN (
    SELECT id, description FROM t2 WHERE status = 'active'
) AS t2 ON t1.id = t2.id
WHERE t1.amount > 150
GROUP BY t1.name
HAVING COUNT(*) > 1
ORDER BY t1.created_at DESC
LIMIT 5;

DELIMITER $$
CREATE PROCEDURE get_active_items()
SQL SECURITY DEFINER
BEGIN
    SELECT * FROM t1 WHERE status = 'active';
END$$
DELIMITER ;

CREATE TABLE IF NOT EXISTS logs (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    table_name VARCHAR(255) NOT NULL,
    action VARCHAR(255) NOT NULL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

DELIMITER $$
CREATE TRIGGER after_insert_t1
AFTER INSERT ON t1
FOR EACH ROW
BEGIN
    INSERT INTO logs (table_name, action) VALUES ('t1', 'insert');
END$$
DELIMITER ;