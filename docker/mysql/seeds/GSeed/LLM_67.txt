CREATE TABLE t1 (
    f1 INT,
    f2 VARCHAR(255),
    f3 DATE,
    f4 DECIMAL(10, 2),
    f5 BOOLEAN
);

INSERT INTO t1 VALUES (1, 'test', '2023-01-01', 100.5, TRUE);
INSERT INTO t1 VALUES (2, NULL, NULL, NULL, FALSE);
INSERT INTO t1 VALUES (3, 'max_int', '9999-12-31', 99999999.99, TRUE);

CREATE TABLE t2 (
    f1 INT,
    f2 INT
);

INSERT INTO t2 VALUES (1, 100);
INSERT INTO t2 VALUES (2, 200);

UPDATE t1 SET f4 = 50.25 WHERE f1 IN (SELECT f1 FROM t2 WHERE f2 > 150);

DELETE FROM t2 WHERE f2 < 150;

CREATE VIEW v1 AS SELECT t1.f1, t1.f2, t2.f2 FROM t1 JOIN t2 ON t1.f1 = t2.f1;

DELIMITER $$
CREATE TRIGGER trg_after_insert AFTER INSERT ON t1
FOR EACH ROW
BEGIN
    INSERT INTO t2 (f1, f2) VALUES (NEW.f1, 300);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE p1(IN param1 INT, OUT param2 VARCHAR(255))
BEGIN
    DECLARE var1 INT;
    SET var1 = param1 + 10;
    
    CASE 
        WHEN var1 > 10 THEN SET param2 = 'Greater than 10';
        ELSE SET param2 = 'Less or equal to 10';
    END CASE;
END$$
DELIMITER ;

ALTER TABLE t1 ADD INDEX idx_f1 (f1);
ALTER TABLE t1 ADD INDEX idx_f2 (f2(50));
ALTER TABLE t1 ADD INDEX idx_f4 (f4);

START TRANSACTION;
SELECT * FROM t1 WHERE f1 = 1 FOR UPDATE;
COMMIT;

ROLLBACK;

EXPLAIN SELECT * FROM t1 WHERE f3 > '2023-01-01';

SHOW VARIABLES LIKE 'version%';
SHOW PROCESSLIST;