CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    department_id INT NOT NULL,
    salary DECIMAL(10, 2),
    hire_date DATE DEFAULT '1970-01-01',
    INDEX idx_department (department_id)
) ENGINE=InnoDB PARTITION BY RANGE COLUMNS(department_id) (
    PARTITION p0 VALUES LESS THAN (100),
    PARTITION p1 VALUES LESS THAN (200),
    PARTITION p2 VALUES LESS THAN MAXVALUE
);

INSERT INTO employees (first_name, last_name, department_id, salary, hire_date)
VALUES ('John', 'Doe', 50, 75000.00, '2020-01-15'),
       ('Jane', 'Smith', 150, 85000.00, '2019-03-22'),
       ('Bob', 'Johnson', 250, 95000.00, '2018-07-30');

SHOW CREATE TABLE employees;

ALTER TABLE employees ADD COLUMN email VARCHAR(255) UNIQUE;
ALTER TABLE employees ADD CONSTRAINT chk_salary CHECK (salary >= 40000);

ANALYZE TABLE employees;
CHECKSUM TABLE employees;

DELIMITER $$
CREATE PROCEDURE update_salary(IN dept_id INT, IN new_salary DECIMAL(10, 2))
BEGIN
    UPDATE employees SET salary = new_salary WHERE department_id = dept_id;
END$$
DELIMITER ;

SET @@global.sql_mode = 'STRICT_ALL_TABLES';
SET @@session.time_zone = '+00:00';

CREATE TRIGGER after_hire_trigger AFTER INSERT ON employees
FOR EACH ROW
BEGIN
    INSERT INTO hire_log (employee_id, hire_date)
    VALUES (NEW.id, NEW.hire_date);
END;

ALTER TABLE employees ADD COLUMN phone VARCHAR(15) DEFAULT 'N/A';
ALTER TABLE employees DROP INDEX idx_department;
CREATE INDEX idx_salary ON employees(salary);

INSERT INTO employees (first_name, last_name, department_id, salary, hire_date)
VALUES ('Alice', 'Williams', 75, 60000.00, '2021-09-15'),
       ('Charlie', 'Brown', 125, 70000.00, '2022-04-28');

CREATE VIEW employee_summary AS
SELECT department_id, COUNT(*) as total_employees, AVG(salary) as avg_salary
FROM employees
GROUP BY department_id;