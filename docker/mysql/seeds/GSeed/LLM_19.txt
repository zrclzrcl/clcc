SET autocommit = 0;
SET lock_wait_timeout = 1;
SET sql_mode = 'STRICT_TRANS_TABLES';
SET group_concat_max_len = 4096;

CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    value INT,
    created_at DATETIME,
    status ENUM('active', 'inactive'),
    UNIQUE INDEX idx_name (name)
);

CREATE TABLE related_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    test_id INT,
    data FLOAT,
    FOREIGN KEY (test_id) REFERENCES test_table(id)
);

INSERT INTO test_table (name, value, created_at, status)
VALUES ('Test1', 100, '2023-01-01 00:00:00', 'active'),
       ('Test2', 200, '2023-01-02 00:00:00', 'inactive'),
       ('Test3', NULL, '2023-01-03 00:00:00', 'active');

INSERT INTO related_table (test_id, data)
VALUES (1, 10.5),
       (2, 20.75);

UPDATE test_table SET value = value * 2 WHERE status = 'active';

DELETE FROM test_table WHERE name LIKE 'Test%';

SELECT t.name, r.data 
FROM test_table t
JOIN related_table r ON t.id = r.test_id
WHERE t.status = 'active'
GROUP BY t.name
HAVING COUNT(r.id) > 1
LIMIT 5;

SELECT NOW(), UUID();

CREATE TRIGGER after_insert_test_table AFTER INSERT ON test_table
FOR EACH ROW
BEGIN
    INSERT INTO related_table (test_id, data) VALUES (NEW.id, RAND() * 100);
END;

DELIMITER $$
CREATE PROCEDURE calculate_sum()
BEGIN
    DECLARE total INT;
    SELECT SUM(value) INTO total FROM test_table WHERE status = 'active';
    INSERT INTO test_table (name, value, created_at, status)
    VALUES ('Sum', total, NOW(), 'inactive');
END$$
DELIMITER ;

START TRANSACTION;
SAVEPOINT my_savepoint;

SELECT * FROM test_table WHERE id > 1000;
ROLLBACK TO my_savepoint;

COMMIT;

EXPLAIN SELECT * FROM test_table WHERE name = 'Test';

CREATE INDEX idx_value ON test_table(value);

SHOW ENGINE INNODB STATUS;
SHOW GLOBAL VARIABLES LIKE 'innodb_buffer_pool_size';
SHOW SESSION STATUS LIKE 'Handler%read';