CREATE TABLE edge_case (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive'),
    data BLOB,
    json_data JSON,
    geom POINT
);

CREATE TABLE spatial_test (
    id INT AUTO_INCREMENT PRIMARY KEY,
    line LINESTRING,
    polygon POLYGON,
    UNIQUE INDEX (line),
    SPATIAL INDEX (polygon)
);

INSERT INTO edge_case (name, description, status, json_data, geom) VALUES
('Test1', 'Edge case 1', 'active', JSON_OBJECT('key', 'value'), ST_GeomFromText('POINT(0 0)')),
('', '', 'inactive', NULL, ST_GeomFromText('POINT(1 1)')),
('MaxName' REPEAT('a', 255), REPEAT('b', 65535), 'active', JSON_ARRAY(), ST_GeomFromText('POINT(90 180)'));

ALTER TABLE edge_case ADD COLUMN new_col INT DEFAULT 42;

CREATE INDEX idx_json ON edge_case (JSON_EXTRACT(json_data, '$.key'));

INSERT INTO spatial_test (line, polygon) VALUES
(ST_GeomFromText('LINESTRING(0 0, 1 1)'), ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))')),
(ST_GeomFromText(''), ST_GeomFromText(''));

UPDATE edge_case SET name = 'UpdatedName', json_data = JSON_SET(json_data, '$.newKey', 'newValue') WHERE id = 1;

DELETE FROM spatial_test WHERE id > 2;

SELECT e.name, s.line, COUNT(*) 
FROM edge_case e 
JOIN spatial_test s ON ST_Intersects(e.geom, s.line)
GROUP BY e.name, s.line
HAVING COUNT(*) > 0;

ANALYZE TABLE edge_case;
ANALYZE TABLE spatial_test;

SELECT JSON_EXTRACT(json_data, '$.key') AS extracted_value FROM edge_case WHERE id = 1;

SELECT ST_Buffer(geom, 5) AS buffered_geom FROM edge_case WHERE status = 'active';