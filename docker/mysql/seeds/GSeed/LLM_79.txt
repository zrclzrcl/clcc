CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INT CHECK (age >= 0),
    registration_date DATE DEFAULT CURRENT_DATE(),
    status ENUM('active', 'inactive') DEFAULT 'active',
    score DECIMAL(5,2) NOT NULL
);

INSERT INTO test_table (name, age, score) VALUES 
('Alice', 30, 98.5),
('Bob', 45, 87.6),
('Charlie', NULL, 100.0),
('', 25, 75.3);

UPDATE test_table SET status = 'inactive' WHERE age > 40;

DELETE FROM test_table WHERE name = '';

EXPLAIN SELECT * FROM test_table WHERE score > 90 ORDER BY registration_date DESC LIMIT 2;

PREPARE stmt1 FROM 'SELECT name, score FROM test_table WHERE id = ?';
SET @id = 1;
EXECUTE stmt1 USING @id;

CREATE TRIGGER after_update_trigger
AFTER UPDATE ON test_table
FOR EACH ROW
BEGIN
    INSERT INTO audit_log (action, timestamp) VALUES ('update', NOW());
END;

DELIMITER $$
CREATE PROCEDURE calculate_average()
BEGIN
    DECLARE avg_score DECIMAL(5,2);
    SELECT AVG(score) INTO avg_score FROM test_table;
    SELECT CONCAT('Average score: ', avg_score);
END$$
DELIMITER ;

CALL calculate_average();

SET @arg0 = (SELECT COUNT(*) FROM test_table WHERE status = 'active');
SELECT @arg0 AS active_count;

ALTER TABLE test_table ADD COLUMN notes TEXT AFTER name;

CREATE VIEW top_scorers AS 
SELECT name, score 
FROM test_table 
WHERE score >= 90 
ORDER BY score DESC;

COMMIT;