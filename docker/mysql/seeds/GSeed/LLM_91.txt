SET @@global.sql_mode = 'ANSI_QUOTES';
CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL DEFAULT '',
    value DECIMAL(10, 2) NOT NULL DEFAULT 0.00,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO t1 (name, value) VALUES ('Test', 100.5), ('Another Test', NULL), ('Edge Case', '');
CREATE TABLE t2 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    t1_id INT NOT NULL,
    details TEXT,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
);
INSERT INTO t2 (t1_id, details) VALUES (1, 'Details for Test'), (2, NULL), (3, '');
UPDATE t1 SET value = value * 2 WHERE name LIKE 'Test%';
SELECT t1.name, t2.details FROM t1 INNER JOIN t2 ON t1.id = t2.t1_id;
SELECT COUNT(*) AS total FROM t1 WHERE value > 0 GROUP BY created_at HAVING COUNT(*) > 1;
START TRANSACTION;
INSERT INTO t1 (name, value) VALUES ('Transaction Test', 50.0);
COMMIT;
SELECT * FROM t1 WHERE id IN (SELECT t1_id FROM t2 WHERE details IS NOT NULL);
DELIMITER $$
CREATE PROCEDURE insert_test(IN name_param VARCHAR(255), IN value_param DECIMAL(10, 2))
BEGIN
    INSERT INTO t1 (name, value) VALUES (name_param, value_param);
END$$
DELIMITER ;
CREATE TRIGGER after_insert_t1 AFTER INSERT ON t1 FOR EACH ROW
BEGIN
    INSERT INTO t2 (t1_id, details) VALUES (NEW.id, CONCAT('New entry: ', NEW.name));
END;
ALTER TABLE t1 ADD INDEX idx_name_value (name, value);