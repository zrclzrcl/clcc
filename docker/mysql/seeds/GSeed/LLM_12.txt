-- Create a table with various data types to cover different storage scenarios
CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    int_col INT,
    varchar_col VARCHAR(255),
    text_col TEXT,
    blob_col BLOB,
    datetime_col DATETIME,
    enum_col ENUM('A', 'B', 'C'),
    boolean_col BOOLEAN,
    decimal_col DECIMAL(10, 2)
);

-- Insert edge case data to test boundary conditions and NULL handling
INSERT INTO test_table (int_col, varchar_col, text_col, blob_col, datetime_col, enum_col, boolean_col, decimal_col) 
VALUES 
    (NULL, '', NULL, BINARY 'testblob', '2023-01-01 00:00:00', 'A', TRUE, 100.50),
    (2147483647, REPEAT('a', 255), REPEAT('b', 65535), BINARY '', '2000-01-01 00:00:00', 'B', FALSE, 99999.99),
    (-2147483648, NULL, NULL, BINARY NULL, '9999-12-31 23:59:59', 'C', TRUE, -99999.99);

-- Create indexes to test query optimization and execution paths
CREATE INDEX idx_int_col ON test_table (int_col);
CREATE FULLTEXT INDEX idx_text_col ON test_table (text_col);
CREATE SPATIAL INDEX idx_spatial_col ON spatial_points (geom);

-- Define a stored procedure to test procedural logic and variable handling
DELIMITER $$

CREATE PROCEDURE test_procedure()
BEGIN
    DECLARE var1 INT;
    SET var1 = 42;
    
    INSERT INTO test_table (int_col, varchar_col) VALUES (var1, 'test');
    
    IF var1 > 0 THEN
        UPDATE test_table SET boolean_col = TRUE WHERE id = LAST_INSERT_ID();
    END IF;
END$$

DELIMITER ;

-- Set variables with binary data for testing memory management
SET @binary_var = BINARY 'binary_test_data';
SET @geom_point = ST_GeomFromText('POINT(1 2)');

-- Test spatial operations to exercise geometry handling
SELECT id, ST_Distance(@geom_point, geom) AS distance 
FROM spatial_points 
ORDER BY distance ASC LIMIT 5;

-- Transaction management to test concurrency and locking mechanisms
START TRANSACTION;
    INSERT INTO test_table (int_col) VALUES (10);
    UPDATE test_table SET int_col = 20 WHERE id = LAST_INSERT_ID();
COMMIT;

-- Reset delimiter back to default if necessary
DELIMITER ;