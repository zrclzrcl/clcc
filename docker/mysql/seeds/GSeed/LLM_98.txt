CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    a VARCHAR(255) UNIQUE NOT NULL,
    b DATETIME DEFAULT NOW(),
    c DECIMAL(10, 2),
    d TEXT,
    e BOOLEAN,
    f FLOAT,
    g DATE,
    INDEX idx_a (a),
    INDEX idx_b (b)
);

INSERT INTO t1 VALUES 
    (NULL, 'test1', NULL, 100.5, 'text1', TRUE, NULL, '2023-01-01'),
    (NULL, 'test2', NOW(), 200.75, 'text2', FALSE, 123.45, '2023-02-02');

ALTER TABLE t1 ADD COLUMN h BLOB;
ALTER TABLE t1 MODIFY c DECIMAL(20, 10);
ALTER TABLE t1 DROP INDEX idx_b;

CREATE TABLE t2 (
    id INT PRIMARY KEY,
    a INT,
    b VARCHAR(255),
    FOREIGN KEY (a) REFERENCES t1(id)
);

INSERT INTO t2 VALUES 
    (1, 1, 'related1'),
    (2, 2, 'related2');

CREATE VIEW v_t1 AS SELECT a, b, c FROM t1 WHERE e = TRUE;

ANALYZE TABLE t1;
SET optimizer_switch='index_merge=on';
EXPLAIN SELECT * FROM t1 WHERE a = 'test1' AND d LIKE '%text%';

CREATE TABLE t3 (
    id INT PRIMARY KEY,
    data TEXT
) ENGINE=MyISAM;

INSERT INTO t3 VALUES (1, REPEAT('test', 1000));

SET GLOBAL max_heap_table_size = 1024 * 1024;
SET SESSION unique_checks = OFF;

SELECT 
    a AS alias_a,
    b AS alias_b,
    c + d AS sum_decimals,
    UUID() AS uuid_value,
    RAND() AS random_number
FROM t1
WHERE e = TRUE
GROUP BY a
HAVING COUNT(*) > 0
ORDER BY b DESC
LIMIT 5;

SELECT 
    t1.a, 
    t2.b
FROM t1
STRAIGHT_JOIN t2 ON t1.id = t2.a
UNION ALL
SELECT 
    t1.a, 
    'none' AS b
FROM t1
WHERE t1.id NOT IN (SELECT a FROM t2);

CREATE TABLE t4 (
    id INT PRIMARY KEY,
    data BLOB CHECK (LENGTH(data) <= 1024)
)
PARTITION BY HASH (id)
PARTITIONS 4;

INSERT INTO t4 SELECT id, UUID_TO_BIN(UUID()) FROM t1;

SET GLOBAL log_bin = ON;
FLUSH LOGS;

SELECT 
    JSON_OBJECT('a', a, 'b', b) AS json_data
FROM t1
WHERE d IS NOT NULL;

CREATE TABLE t5 (
    id INT PRIMARY KEY,
    data TEXT,
    UNIQUE INDEX idx_data (data)
);

INSERT INTO t5 SELECT id, CONCAT(a, b) FROM t1;