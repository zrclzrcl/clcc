SET sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_table (name, created_at)
VALUES ('Test Name', NOW()),
       (NULL, '2023-10-01 00:00:00'),
       ('Edge Case', '2023-10-01 23:59:59');

CREATE TABLE test_table_with_constraints (
    id INT AUTO_INCREMENT PRIMARY KEY,
    amount DECIMAL(10,2) CHECK (amount > 0),
    description TEXT NOT NULL
);

INSERT INTO test_table_with_constraints (amount, description)
VALUES (100.50, 'Valid Amount'),
       (0.01, 'Minimum Positive');

CREATE TABLE test_fulltext (
    id INT AUTO_INCREMENT PRIMARY KEY,
    content TEXT,
    FULLTEXT INDEX idx_content (content)
);

INSERT INTO test_fulltext (content)
VALUES ('This is a test for full-text search.'),
       ('Another test case with keywords.');

DELIMITER $$

CREATE PROCEDUREEDURE test_procedure(IN param1 INT, OUT result INT)
BEGIN
    DECLARE counter INT DEFAULT 0;
    
    WHILE counter < param1 DO
        SET counter = counter + 1;
        INSERT INTO test_table (name) VALUES (CONCAT('Procedure Insert ', counter));
    END WHILE;
    
    SELECT COUNT(*) INTO result FROM test_table WHERE name LIKE 'Procedure%';
END$$

DELIMITER ;

CREATE TRIGGER test_trigger AFTER INSERT ON test_table
FOR EACH ROW
BEGIN
    INSERT INTO test_table_with_constraints (amount, description)
    VALUES (100.00, CONCAT('Triggered by insert on row ', NEW.id));
END;

SET @test_variable = 5;
CALL test_procedure(@test_variable, @result);
SELECT @result AS procedure_result;

SELECT t1.name, t2.description
FROM test_table t1
JOIN test_table_with_constraints t2 ON t1.id = t2.id
WHERE t1.created_at > DATE_SUB(NOW(), INTERVAL 1 DAY)
ORDER BY t1.id DESC
LIMIT 5;

EXPLAIN SELECT * FROM test_fulltext WHERE MATCH(content) AGAINST('test');