SET optimizer_switch='index_condition_pushdown=on';
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';

CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') NOT NULL
);

CREATE TABLE t2 (
    transaction_id INT PRIMARY KEY,
    amount DECIMAL(10, 2) NOT NULL,
    currency CHAR(3) NOT NULL,
    description TEXT
);

CREATE TABLE t3 (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    level VARCHAR(50),
    message LONGTEXT,
    logged_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO t1 (name, status) VALUES ('Test User 1', 'active'), ('Test User 2', 'inactive');
INSERT INTO t2 (transaction_id, amount, currency, description) VALUES (1001, 100.50, 'USD', 'Initial transaction'), (1002, -50.75, 'EUR', 'Refund');
INSERT INTO t3 (level, message) VALUES ('INFO', 'System started'), ('ERROR', 'Connection failed');

ANALYZE TABLE t1;
CHECK TABLE t1;
REPAIR TABLE t1;

UPDATE t1 SET name = 'Updated User 1' WHERE id = 1;
DELETE FROM t2 WHERE transaction_id = 1002;

CREATE TRIGGER trg_t1_update BEFORE UPDATE ON t1 FOR EACH ROW
BEGIN
    INSERT INTO t3 (level, message) VALUES ('DEBUG', CONCAT('User ', OLD.name, ' was updated'));
END;

DELIMITER $$
CREATE PROCEDURE sp_test()
BEGIN
    DECLARE v_count INT;
    SELECT COUNT(*) INTO v_count FROM t1 WHERE status = 'active';
    INSERT INTO t3 (level, message) VALUES ('INFO', CONCAT('Active users: ', v_count));
END$$
DELIMITER ;

CREATE FUNCTION fn_test_sum(a DECIMAL(5,2), b DECIMAL(5,2)) RETURNS DECIMAL(6,2)
DETERMINISTIC
BEGIN
    RETURN a + b;
END;

ALTER TABLE t1 ADD COLUMN notes VARCHAR(200);
ALTER TABLE t2 ADD CONSTRAINT chk_amount CHECK (amount <> 0);

SELECT fn_test_sum(10.50, 20.30) AS total;
CALL sp_test();