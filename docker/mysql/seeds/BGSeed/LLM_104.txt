-- Initial seed for MySQL fuzz testing
SET optimizer_switch='subquery_early_exit=on';

CREATE TABLE t1 (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    created_at DATE,
    score FLOAT,
    active BOOLEAN
);

CREATE TABLE t2 (
    id INT PRIMARY KEY,
    value INT,
    category VARCHAR(50),
    INDEX idx_category (category)
);

CREATE TABLE t3 (
    id INT PRIMARY KEY,
    amount DECIMAL(10, 2),
    transaction_date DATE,
    KEY idx_transaction_date (transaction_date),
    PARTITION BY RANGE(YEAR(transaction_date)) (
        PARTITION p0 VALUES LESS THAN (2020),
        PARTITION p1 VALUES LESS THAN (2022),
        PARTITION p2 VALUES LESS THAN MAXVALUE
    )
);

CREATE TABLE t4 (
    id INT PRIMARY KEY,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES t1(id)
);

INSERT INTO t1 VALUES 
(1, 'Alice', '2023-01-01', 85.5, TRUE),
(2, 'Bob', '2023-02-02', NULL, FALSE),
(3, 'Charlie', '2023-03-03', 90.1, TRUE);

INSERT INTO t2 VALUES 
(1, 100, 'A'),
(2, 200, 'B'),
(3, 300, 'C');

INSERT INTO t3 VALUES 
(1, 100.50, '2021-01-01'),
(2, 200.75, '2022-02-02'),
(3, 300.00, '2024-03-03');

INSERT INTO t4 VALUES 
(1, 1),
(2, 2);

SELECT t1.name, t2.value, t3.amount
FROM t1
JOIN t2 ON t1.id = t2.id
JOIN t3 ON t1.id = t3.id
WHERE t1.active = TRUE;

SELECT COUNT(*) AS total_active
FROM t1
WHERE active = TRUE
GROUP BY name
HAVING COUNT(*) > 1;

DELIMITER //
CREATE TRIGGER trg_after_insert_t1
AFTER INSERT ON t1
FOR EACH ROW
BEGIN
    UPDATE t2 SET value = value + 1 WHERE id = NEW.id;
END//
DELIMITER ;

ALTER TABLE t2 ADD COLUMN description TEXT;
ALTER TABLE t4 DROP FOREIGN KEY user_id;

DELIMITER //
CREATE FUNCTION add_numbers(a INT, b INT) RETURNS INT
DETERMINISTIC
BEGIN
    RETURN a + b;
END//
DELIMITER ;

EXPLAIN SELECT * FROM t3 WHERE transaction_date >= '2022-01-01';

ANALYZE TABLE t1, t2, t3, t4;