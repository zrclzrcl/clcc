SET @@global.optimizer_switch = 'index_merge=on,loose_index_scan=off';
SET @@session.read_buffer_size = 131072;

CREATE TABLE t1 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    description TEXT,
    status ENUM('active', 'inactive') NOT NULL DEFAULT 'active',
    value DECIMAL(10, 2) DEFAULT 0.00
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE t2 (
    id INT PRIMARY KEY,
    t1_id INT,
    data BLOB,
    INDEX idx_t1_id (t1_id),
    UNIQUE KEY unique_data_hash (data_hash)
) ENGINE=InnoDB;

ALTER TABLE t2 ADD CONSTRAINT fk_t2_t1 FOREIGN KEY (t1_id) REFERENCES t1(id) ON DELETE CASCADE;

CREATE VIEW v1 AS
SELECT 
    t1.id,
    t1.name,
    COUNT(t2.id) as total_data,
    SUM(t2.value) as total_value
FROM t1
LEFT JOIN t2 ON t1.id = t2.t1_id
GROUP BY t1.id, t1.name;

CREATE TRIGGER trg_t1_before_insert BEFORE INSERT ON t1 FOR EACH ROW
BEGIN
    IF NEW.status NOT IN ('active', 'inactive') THEN
        SET NEW.status = 'active';
    END IF;
END;

DELIMITER $$
CREATE FUNCTION fn_calculate_total_value(t_id INT) RETURNS DECIMAL(10, 2)
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE total DECIMAL(10, 2);
    SELECT SUM(value) INTO total FROM t1 WHERE id = t_id;
    RETURN total;
END$$
DELIMITER ;

CREATE TABLE t3 (
    id INT PRIMARY KEY,
    content TEXT,
    FULLTEXT INDEX idx_content (content)
);

INSERT INTO t1 VALUES 
(1, 'Test Record 1', NOW(), 'This is a test description.', 'active', 100.5),
(2, 'Test Record 2', NOW(), NULL, 'inactive', 200.75),
(3, 'Test Record 3', NOW(), 'Another test record with more details.', 'active', 150.25);

INSERT INTO t2 VALUES 
(1, 1, HEX('binary data here'), 'some_hash'),
(2, 1, HEX('more binary data'), 'another_hash');

INSERT INTO t3 VALUES 
(1, 'This is a sample text for full-text search.'),
(2, 'Another entry to test full-text indexing.');

ANALYZE TABLE t1, t2, t3;

UPDATE t1 SET description = CONCAT(description, ' Updated at ', NOW()) WHERE id IN (1, 2);

DELETE FROM t2 WHERE data_hash NOT IN (SELECT data_hash FROM t1);