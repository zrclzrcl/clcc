SET optimizer_switch='semijoin=on,materialization=on,firstmatch=on';
SET sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO';

CREATE TABLE t1 (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    price DECIMAL(10, 2),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE t2 (
    id INT PRIMARY KEY,
    product_id INT,
    category VARCHAR(30),
    stock INT CHECK (stock >= 0)
) ENGINE=MyISAM;

CREATE TABLE t3 (
    transaction_id INT PRIMARY KEY,
    user_id INT NOT NULL,
    amount DECIMAL(15, 2),
    status ENUM('pending', 'completed', 'failed')
);

INSERT INTO t1 VALUES
(1, 'Laptop', 999.99, '2023-07-20 14:30:00'),
(2, 'Phone', 699.99, NULL),
(3, 'Tablet', 299.99, '2023-07-21 09:15:00');

INSERT INTO t2 VALUES
(1, 1, 'electronics', 45),
(2, 2, 'electronics', 30),
(3, NULL, 'accessories', 100);

INSERT INTO t3 VALUES
(1, 1, 99.99, 'completed'),
(2, 2, 199.99, 'pending'),
(3, 3, -50.00, 'failed');

SELECT 
    t1.name,
    t2.category,
    t3.amount
FROM 
    t1
JOIN 
    t2 ON t1.id = t2.product_id
LEFT JOIN 
    t3 ON t2.id = t3.user_id
WHERE 
    t3.status = 'completed'
GROUP BY 
    t1.name
HAVING 
    COUNT(t3.transaction_id) > 0
ORDER BY 
    t1.price DESC;

SET @stmt = "
SELECT 
    MAX(t1.price) AS max_price,
    MIN(t2.stock) AS min_stock
FROM 
    t1
JOIN 
    t2 ON t1.id = t2.product_id
WHERE 
    t2.category LIKE 'electron%'
";
PREPARE my_stmt FROM @stmt;
EXECUTE my_stmt;

SELECT 
    t3.user_id,
    SUM(t3.amount) AS total_amount
FROM 
    t3
GROUP BY 
    t3.user_id
HAVING 
    total_amount > 100
ORDER BY 
    total_amount DESC
LIMIT 2, 5;

UNION (
    SELECT id, name FROM t1 WHERE price < 500,
    SELECT product_id, category FROM t2 WHERE stock = 0
);