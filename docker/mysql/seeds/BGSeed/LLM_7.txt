CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name CHAR(50) NOT NULL,
    score DECIMAL(10, 2),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') DEFAULT 'active'
);

ALTER TABLE test_table ADD CONSTRAINT unique_name UNIQUE (name);
ALTER TABLE test_table MODIFY COLUMN score DECIMAL(10, 2) NOT NULL;

CREATE VIEW v1 AS 
SELECT 
    name, 
    MAX(created_at) AS last_activity,
    COUNT(*) AS total_records 
FROM 
    test_table 
GROUP BY 
    name 
HAVING 
    status = 'active';

DELIMITER $$
CREATE PROCEDURE sp_test()
BEGIN
    DECLARE var1 INT;
    SET var1 = 10;
    IF var1 > 5 THEN
        INSERT INTO test_table (name, score) VALUES ('test_proc', 99.9);
    END IF;
END$$
DELIMITER ;

CREATE TRIGGER trg_after_update 
AFTER UPDATE ON test_table 
FOR EACH ROW 
BEGIN
    INSERT INTO trigger_log VALUES (OLD.id, NEW.name, NOW());
END;

INSERT INTO test_table (name, score) VALUES ('test1', 85.5);
INSERT INTO test_table (name, score) VALUES ('test2', 90.1);

CREATE TABLE trigger_log (
    id INT AUTO_INCREMENT PRIMARY KEY,
    old_id INT,
    new_name CHAR(50),
    timestamp DATETIME
);

DELIMITER $$
CREATE TRIGGER trg_after_delete 
AFTER DELETE ON test_table 
FOR EACH ROW 
BEGIN
    INSERT INTO trigger_log VALUES (OLD.id, OLD.name, NOW());
END$$
DELIMITER ;

INSERT INTO test_table (name, score) VALUES ('test3', 75.0);