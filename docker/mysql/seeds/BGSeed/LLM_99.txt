CREATE TABLE t1 (
    pk INT NOT NULL AUTO_INCREMENT,
    col_int_key INT DEFAULT NULL,
    col_varchar VARCHAR(255) DEFAULT NULL,
    col_datetime DATETIME DEFAULT NULL,
    col_decimal DECIMAL(10, 2) DEFAULT NULL,
    PRIMARY KEY (pk),
    UNIQUE KEY uk_col_varchar (col_varchar)
);

INSERT INTO t1 VALUES 
(1, 100, 'test', '2023-01-01 00:00:00', 100.50),
(2, NULL, 'example', '2023-01-02 00:00:00', NULL);

ALTER TABLE t1 ADD INDEX idx_col_int_key (col_int_key);

ANALYZE TABLE t1;

CREATE TABLE t2 (
    pk INT NOT NULL AUTO_INCREMENT,
    col_ref INT DEFAULT NULL,
    col_text TEXT DEFAULT NULL,
    PRIMARY KEY (pk),
    CONSTRAINT fk_t2_t1 FOREIGN KEY (col_ref) REFERENCES t1(pk)
);

DELIMITER $$

CREATE TRIGGER trig_t2
AFTER INSERT ON t2
FOR EACH ROW
BEGIN
    UPDATE t1 SET col_int_key = NEW.col_ref WHERE pk = NEW.col_ref;
END$$

DELIMITER ;

INSERT INTO t2 VALUES 
(1, 1, 'related data'),
(2, NULL, 'another entry');

CREATE FUNCTION func_test() RETURNS INT
DETERMINISTIC
SQL SECURITY DEFINER
BEGIN
    DECLARE result INT;
    SET @query = "SELECT COUNT(*) FROM t1 WHERE col_int_key > 50";
    PREPARE stmt FROM @query;
    EXECUTE stmt INTO result;
    DEALLOCATE PREPARE stmt;
    RETURN result;
END$$

DELIMITER ;

SELECT func_test();