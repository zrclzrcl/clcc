SET GLOBAL max_connections = 100;
SET GLOBAL query_cache_size = 16M;

CREATE TABLE test_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('active', 'inactive') NOT NULL DEFAULT 'active',
    UNIQUE INDEX unique_name (name),
    CHECK (status IN ('active', 'inactive'))
);

INSERT INTO test_table (name, status) VALUES
('Test1', 'active'),
('Test2', 'inactive'),
(NULL, 'active'),  -- Testing edge case with NULL
(0x787878, 'active');  -- Testing hexadecimal input

CREATE TABLE test_trigger (
    id INT AUTO_INCREMENT PRIMARY KEY,
    value INT NOT NULL
);

DELIMITER $$

CREATE TRIGGER after_insert_test_trigger
AFTER INSERT ON test_trigger
FOR EACH ROW
BEGIN
    INSERT INTO test_table (name, status) VALUES ('Triggered', 'active');
END$$

DELIMITER ;

INSERT INTO test_trigger (value) VALUES (10), (20);

DELIMITER $$

CREATE PROCEDUREEDURE example_procedure(IN input INT)
BEGIN
    DECLARE result INT;
    
    SET result = input * 2;
    SELECT result AS output;
END$$

DELIMITER ;

CREATE FUNCTION example_function(input INT) RETURNS INT
DETERMINISTIC
RETURN input * 3;

SET GLOBAL event_scheduler = ON;

CREATE EVENT test_event
ON SCHEDULE EVERY 1 HOUR
STARTS CURRENT_TIMESTAMP + INTERVAL 1 MINUTE
DO
    INSERT INTO test_table (name, status) VALUES ('Event', 'active');

SHOW PROCESSLIST;
KILL QUERY 1;  -- Replace with actual process ID if necessary

DROP TABLE IF EXISTS test_table;