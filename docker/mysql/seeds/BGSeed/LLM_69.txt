CREATE TABLE t1 (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    age INT CHECK (age >= 0),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO t1 (name, age) VALUES 
('Alice', 30),
('', 0),
('Bob', 9),
('Charlie', -1); -- Testing negative value with a check constraint

CREATE INDEX idx_t1_name_age ON t1(name, age);

CREATE TABLE t2 (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    t1_id INT,
    details TEXT,
    FOREIGN KEY (t1_id) REFERENCES t1(id)
);

INSERT INTO t2 (t1_id, details) VALUES 
(1, 'Details for Alice'),
(2, 'Details for empty name'),
(3, 'Bob''s details'); -- Testing single quotes in strings

CREATE VIEW v_t1_t2 AS
SELECT t1.name, t2.details
FROM t1
JOIN t2 ON t1.id = t2.t1_id;

DELIMITER $$
CREATE PROCEDURE proc_insert_t1(IN p_name VARCHAR(255), IN p_age INT)
BEGIN
    INSERT INTO t1 (name, age) VALUES (p_name, p_age);
END$$
DELIMITER ;

CALL proc_insert_t1('Daisy', 45);

DELIMITER $$
CREATE TRIGGER trg_t1_after_insert AFTER INSERT ON t1
FOR EACH ROW
BEGIN
    INSERT INTO t2 (t1_id, details) VALUES (NEW.id, CONCAT('New entry for ', NEW.name));
END$$
DELIMITER ;

ALTER TABLE t1 ADD COLUMN active BOOLEAN DEFAULT TRUE;

UPDATE t1 SET active = FALSE WHERE id = 4;